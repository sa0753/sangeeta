# -*- coding: utf-8 -*-
"""Copy of Copy of Copy of Copy of INFO5731_Assignment_Two.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jNtsDN9R3wRtOvQqZvYOnt1TIaFLJPuC

# **INFO5731 Assignment Two**

In this assignment, you will try to gather text data from open data source via web scraping or API. After that you need to clean the text data and syntactic analysis of the data.

# **Question 1**

(40 points). Write a python program to collect text data from **either of the following sources** and save the data into a **csv file**:

(1) Collect all the customer reviews of the product [2019 Dell labtop](https://www.amazon.com/Dell-Inspiron-5000-5570-Laptop/dp/B07N49F51N/ref=sr_1_11?crid=1IJ7UWF2F4GHH&keywords=dell%2Bxps%2B15&qid=1580173569& sprefix=dell%2Caps%2C181&sr=8-11&th=1) on amazon.

(2) Collect the top 100 User Reviews of the film [Joker](https://www.imdb.com/title/tt7286456/reviews?ref_=tt_urv) from IMDB.

(3) Collect the abstracts of the top 100 research papers by using the query [natural language processing](https://citeseerx.ist.psu.edu/search?q=natural+language+processing&submit.x=0&submit.y=0&sort=rlv&t=doc) from CiteSeerX.

(4) Collect the top 100 tweets by using hashtag ["#wuhancoronovirus"](https://twitter.com/hashtag/wuhancoronovirus) from Twitter.
"""

from urllib.request import urlopen as UReq    
from bs4 import BeautifulSoup as soup
import csv
import pandas as pd

my_url = 'https://www.imdb.com/title/tt7286456/reviews?ref_=tt_urv'
uClient = UReq(my_url)
page_html = uClient.read()
uClient.close

page_soup = soup(page_html, "html.parser")

with open('joker.csv', 'w', newline='') as file:
  file_input = csv.writer(file)
  file_input.writerow(["Number", "User Name", "Description"])
  for x in range(0,100):
    name = page_soup.findAll("span",{"class":"display-name-link"})
    name_id = name[0].text

    review= page_soup.findAll("div", {"class":"review-container"})
    reviews = review[0].text

    file_input.writerow([(x+0), name_id, reviews])
    print ("name: " + name_id)
    print ("review: " + reviews)

from urllib.request import urlopen as UReq    
from bs4 import BeautifulSoup as soup
import csv
import pandas as pd

my_url = 'https://www.imdb.com/title/tt7286456/reviews?ref_=tt_urv'
uClient = UReq(my_url)
page_html = uClient.read()
uClient.close

page_soup = soup(page_html, "html.parser")

with open('joker.csv', 'w', newline='') as file:
  file_input = csv.writer(file)
  file_input.writerow(["Number", "User Name", "Description"])
  for x in range(99):
    name = page_soup.findAll("span",{"class":"display-name-link"})[x]
    name_id = name.text
    
    review= page_soup.findAll("div", {"class":"review-container"})[x]
    reviews = review.text
  
    file_input.writerow([x, name_id, reviews])
    print ("name: " + name_id)
    print ("review: " + reviews)

"""# **Question 2**

(30 points). Write a python program to **clean the text data** you collected above and save the data in a new column in the csv file. The data cleaning steps include:

(1) Remove noise, such as special characters and punctuations.

(2) Remove numbers.

(3) Remove stopwords by using the [stopwords list](https://gist.github.com/sebleier/554280).

(4) Lowercase all texts

(5) Stemming. 

(6) Lemmatization.
"""

from urllib.request import urlopen as UReq    
from bs4 import BeautifulSoup as soup
import csv
import pandas as pd

my_url = 'https://www.imdb.com/title/tt7286456/reviews?ref_=tt_urv'
uClient = UReq(my_url)
page_html = uClient.read()
uClient.close

page_soup = soup(page_html, "html.parser")

with open('joker.csv', 'w', newline='') as file:
  file_input = csv.writer(file)
  file_input.writerow(["Number", "User Name", "Description"])
  for x in range(0,100):
    name = page_soup.findAll("span",{"class":"display-name-link"})
    name_id = name[0].text

    review= page_soup.findAll("div", {"class":"review-container"})
    reviews = review[0].text

    file_input.writerow([(x+0), name_id, reviews])
    print ("name: " + name_id)
    print ("review: " + reviews)



"""# **Question 3**

(30 points). Write a python program to conduct **syntax and structure analysis** of the clean text you just saved above. The syntax and structure analysis includes: 

(1) Parts of Speech (POS) Tagging: Tag Parts of Speech of each word in the text, and calculate the total number of N(oun), V(erb), Adj(ective), Adv(erb), respectively.

(2) Constituency Parsing and Dependency Parsing: print out the constituency parsing trees and dependency parsing trees of all the sentences. Using one sentence as an example to explain your understanding about the constituency parsing tree and dependency parsing tree.

(3) Named Entity Recognition: Extract all the entities such as person names, organizations, locations, product names, and date from the clean texts, calculate the count of each entity.
"""

# Write your code here

"""**Write your explanations of the constituency parsing tree and dependency parsing tree here (Question 3-2):**"""